$uom-buttons: (
  primary: (
    text-color: var(--uom-brand-dark),
    text-color-invert: var(--uom-section-bg),
    text-color-hover: var(--uom-brand-dark),
    text-color-hover-invert: var(--uom-section-bg),
    background: var(--uom-primary),
    background-invert: var(--uom-white),
    background-hover: var(--uom-primary-hover),
    background-hover-invert: var(--uom-white),
    border: transparent,
    border-hover: transparent,
    focus: var(--uom-focus),
    focus-invert: var(--uom-focus-light),
    hover: white,
    hover-invert: black
  ),
  secondary: (
    text-color: var(--uom-brand-dark),
    text-color-invert: var(--uom-section-bg),
    text-color-hover: var(--uom-brand-dark),
    text-color-hover-invert: var(--uom-section-bg),
    background: var(--uom-secondary),
    background-invert: var(--uom-white),
    background-hover: var(--uom-secondary-hover),
    background-hover-invert: var(--uom-white),
    border: transparent,
    border-hover: transparent,
    focus: var(--uom-focus),
    focus-invert: var(--uom-focus-light),
    hover: white,
    hover-invert: black
  ),
  tertiary: (
    text-color: var(--uom-brand-dark),
    text-color-invert: var(--uom-white),
    background: transparent,
    background-invert: transparent,
    background-hover: var(--uom-primary-hover),
    background-hover-invert: var(--uom-white),
    border: var(--uom-brand-dark),
    border-invert: var(--uom-white),
    focus: var(--uom-focus),
    focus-invert: var(--uom-focus-light),
  ),
  dark-outline-solid: (
    text-color: var(--uom-brand-dark),
    text-color-invert: var(--uom-white),
    text-color-hover: var(--uom-text-light),
    text-color-hover-invert: var(--uom-section-bg),
    background: var(--uom-white),
    background-invert: var(--uom-section-bg),
    background-hover: var(--uom-primary-light),
    background-hover-invert: var(--uom-white),
    border: var(--uom-brand-dark),
    border-invert: var(--uom-white),
    border-hover: transparent,
    border-hover-invert: transparent,
    focus: var(--uom-focus),
    focus-invert: var(--uom-focus-light)
  ),
  light: (
    text-color: var(--uom-text-dark),
    text-color-invert: var(--uom-section-bg),
    text-color-hover: var(--uom-text-dark),
    text-color-hover-invert: var(--uom-section-bg),
    background: var(--uom-brand-light),
    background-invert: var(--uom-brand-light),
    background-hover: var(--uom-brand-light),
    background-hover-invert: var(--uom-brand-light),
    border: transparent,
    border-invert: transparent,
    border-hover: transparent,
    border-hover-invert: transparent,
    focus: var(--uom-focus),
    focus-invert: var(--uom-focus-light),
    hover: black,
    hover-invert: white
  ),
  light-outline: (
    text-color: var(--uom-brand-light),
    text-color-invert: var(--uom-brand-light),
    text-color-hover: var(--uom-text-dark),
    text-color-hover-invert: var(--uom-section-bg),
    background: transparent,
    background-invert: transparent,
    background-hover: var(--uom-brand-light),
    background-hover-invert: var(--uom-brand-light),
    border: var(--uom-brand-light),
    border-invert: var(--uom-brand-light),
    border-hover: transparent,
    border-hover-invert: transparent,
    focus: var(--uom-focus),
    focus-invert: var(--uom-focus-light)
  ),
  white: (
    text-color: var(--uom-text-dark),
    text-color-invert: var(--uom-section-bg),
    text-color-hover: var(--uom-text-dark),
    text-color-hover-invert: var(--uom-section-bg),
    background: var(--uom-white),
    background-invert: var(--uom-white),
    background-hover: var(--uom-white),
    background-hover-invert: var(--uom-white),
    border: transparent,
    border-invert: transparent,
    border-hover: transparent,
    border-hover-invert: transparent,
    focus: var(--uom-white),
    focus-invert: var(--uom-focus-light),
    hover: black,
    hover-invert: black
  ),
  white-outline: (
    text-color: var(--uom-white),
    text-color-invert: var(--uom-white),
    text-color-hover: var(--uom-text-dark),
    text-color-hover-invert: var(--uom-section-bg),
    background: transparent,
    background-invert: transparent,
    background-hover: var(--uom-white),
    background-hover-invert: var(--uom-white),
    border: var(--uom-white),
    border-invert: var(--uom-white),
    border-hover: transparent,
    border-hover-invert: transparent,
    focus: var(--uom-white),
    focus-invert: var(--uom-focus-light),
    hover: black,
    hover-invert: white
  ),
  danger: (
    text-color: var(--uom-text-light),
    text-color-invert: var(--uom-text-light),
    text-color-hover: var(--uom-text-light),
    text-color-hover-invert: var(--uom-text-light),
    background: var(--uom-status-error),
    background-invert: var(--uom-status-error),
    background-hover: var(--uom-status-error),
    background-hover-invert: var(--uom-status-error),
    border: transparent,
    border-invert: transparent,
    border-hover: transparent,
    border-hover-invert: transparent,
    focus: var(--uom-focus),
    focus-invert: var(--uom-focus-light),
    hover: white,
    hover-invert: white
  ),
  info: (
    text-color: var(--uom-text-light),
    text-color-hover: var(--uom-text-light),
    background: var(--uom-status-info),
    background-hover: var(--uom-status-info),
    border: transparent,
    border-hover: transparent,
    focus: var(--uom-focus),
    focus-invert: var(--uom-focus-light),
    hover: white
  ),
);

.uom-button {
  @include font-size('sm');
  border-radius: var(--uom-border-radius);
  font-weight: var(--uom-font-bold);
  border: solid 1px transparent;
  white-space: normal;
  text-decoration: none;
  padding: rem(13px) rem(22px) rem(11px) rem(22px);
  cursor: pointer;
  -webkit-appearance: none; /* stylelint-disable-line property-no-vendor-prefix */
  appearance: none;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  text-align: center;
  vertical-align: middle;
  user-select: none;
  display: inline-block;
  transition: background ($uom-transition-duration);

  &:not(.uom-button--flex) {
    min-width: rem(124px);
  }

  &:hover {
    outline: none;
  }

  &:focus {
    @include uom-focus;
  }

  &:disabled,
  &.disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }

  .uom-material-icons {
    font-size: rem(map-get($uom-icon-sizes, 24));
    line-height: rem(10px);
    position: relative;
    bottom: rem(-7px);

    &:first-child {
      margin-right: rem(8px);
    }

    &:last-child {
      margin-left: rem(8px);
    }

    &:only-child {
      margin: 0;
    }
  }

  &--small {
    @include font-size('xs');
    padding: rem(5px);

    .uom-material-icons {
      font-size: rem(map-get($uom-icon-sizes, 20));

      &:first-child {
        margin-right: rem(4px);
      }

      &:last-child {
        margin-left: rem(4px);
      }

      &:only-child {
        margin: 0;
      }
    }
  }

  &--flex {
    display: flex;
    justify-content: center;
    align-items: center;

    .uom-material-icons {
      position: static;
    }
  }

  &--full-width {
    display: block;
    width: 100%;

    @include breakpoint($uom-desktop-breakpoint) {
      display: inline-block;
      width: auto;
    }
  }
}

.uom-button {
  @each $color, $property-map in $uom-buttons {
    &--#{"" + $color} {
      color: map-get($property-map, text-color);
      background-color: map-get($property-map, background);
      border-color: map-get($property-map, border);

      &:visited {
        color: map-get($property-map, text-color);
      }

      &:focus {
        outline-color: map-get($property-map, focus);
      }

      &:hover {
        color: map-get($property-map, text-color-hover);
        background-color: map-get($property-map, background-hover);
        border-color: map-get($property-map, border-hover);
        @if map-get($property-map, hover) == white {
          background-image: linear-gradient(rgba(var(--uom-white-rgb), 0.01), rgba(var(--uom-white-rgb), 0.01));
        }
        @if map-get($property-map, hover) == black {
          background-image: linear-gradient(rgba(var(--uom-black-rgb), 0.07), rgba(var(--uom-black-rgb), 0.07));
        }

        .uom-material-icons {
          color: map-get($property-map, text-color-hover);
        }
      }

      &:active {
        color: map-get($property-map, text-color-hover);
        background-color: map-get($property-map, background-hover);
        border-color: map-get($property-map, border-hover);
        @if map-get($property-map, hover) == white {
          background-image: linear-gradient(rgba(var(--uom-white-rgb), 0.075), rgba(var(--uom-white-rgb), 0.075));
        }
        @if map-get($property-map, hover) == black {
          background-image: linear-gradient(rgba(var(--uom-black-rgb), 0.035), rgba(var(--uom-black-rgb), 0.035));
        }

        .uom-material-icons {
          color: map-get($property-map, text-color-hover);
        }
      }

      &:disabled,
      &.disabled {
        color: map-get($property-map, text-color);
        background-color: map-get($property-map, background);
        border-color: map-get($property-map, border);
      }

      .uom-material-icons {
        color: map-get($property-map, text-color);
      }
    }
  }
}

.uom-section--invert .uom-button {
  @each $color, $property-map in $uom-buttons {
    &--#{"" + $color} {
      color: map-get($property-map, text-color-invert);
      background-color: map-get($property-map, background-invert);
      border-color: map-get($property-map, border-invert);

      &:visited {
        color: map-get($property-map, text-color-invert);
      }

      &:focus {
        outline-color: map-get($property-map, focus-invert);
      }

      &:hover {
        color: map-get($property-map, text-color-hover-invert);
        background-color: map-get($property-map, background-hover-invert);
        border-color: map-get($property-map, border-hover-invert);
        @if map-get($property-map, hover-invert) == white {
          background-image: linear-gradient(rgba(var(--uom-white-rgb), 0.15), rgba(var(--uom-white-rgb), 0.15));
        }
        @if map-get($property-map, hover-invert) == black {
          background-image: linear-gradient(rgba(var(--uom-black-rgb), 0.07), rgba(var(--uom-black-rgb), 0.07));
        }

        .uom-material-icons {
          color: map-get($property-map, text-color-hover-invert);
        }
      }

      &:active {
        color: map-get($property-map, text-color-hover-invert);
        background-color: map-get($property-map, background-hover-invert);
        border-color: map-get($property-map, border-hover-invert);
        @if map-get($property-map, hover) == white {
          background-image: linear-gradient(rgba(var(--uom-white-rgb), 0.075), rgba(var(--uom-white-rgb), 0.075));
        }
        @if map-get($property-map, hover) == black {
          background-image: linear-gradient(rgba(var(--uom-black-rgb), 0.035), rgba(var(--uom-black-rgb), 0.035));
        }

        .uom-material-icons {
          color: map-get($property-map, text-color-hover-invert);
        }
      }

      &:disabled,
      &.disabled {
        color: map-get($property-map, text-color-invert);
        background-color: map-get($property-map, background-invert);
        border-color: map-get($property-map, border-invert);
      }

      .uom-material-icons {
        color: map-get($property-map, text-color-invert);
      }
    }
  }
}

.uom-dialog .uom-button {
  @each $color, $property-map in $uom-buttons {
    &--#{"" + $color} {
      color: map-get($property-map, text-color);
      background-color: map-get($property-map, background);
      border-color: map-get($property-map, border);

      &:visited {
        color: map-get($property-map, text-color);
      }

      &:focus {
        outline-color: map-get($property-map, focus);
      }

      &:hover {
        color: map-get($property-map, text-color-hover);
        background-color: map-get($property-map, background-hover);
        border-color: map-get($property-map, border-hover);
        @if map-get($property-map, hover) == white {
          background-image: linear-gradient(rgba(var(--uom-white-rgb), 0.15), rgba(var(--uom-white-rgb), 0.15));
        }
        @if map-get($property-map, hover) == black {
          background-image: linear-gradient(rgba(var(--uom-black-rgb), 0.07), rgba(var(--uom-black-rgb), 0.07));
        }

        .uom-material-icons {
          color: map-get($property-map, text-color-hover);
        }
      }

      &:active {
        color: map-get($property-map, text-color-hover);
        background-color: map-get($property-map, background-hover);
        border-color: map-get($property-map, border-hover);
        @if map-get($property-map, hover) == white {
          background-image: linear-gradient(rgba(var(--uom-white-rgb), 0.075), rgba(var(--uom-white-rgb), 0.075));
        }
        @if map-get($property-map, hover) == black {
          background-image: linear-gradient(rgba(var(--uom-black-rgb), 0.035), rgba(var(--uom-black-rgb), 0.035));
        }

        .uom-material-icons {
          color: map-get($property-map, text-color-hover);
        }
      }

      &:disabled,
      &.disabled {
        color: map-get($property-map, text-color);
        background-color: map-get($property-map, background);
        border-color: map-get($property-map, border);
      }

      .uom-material-icons {
        color: map-get($property-map, text-color);
      }
    }
  }
}
