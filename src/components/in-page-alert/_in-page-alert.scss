//Variations
$uom-in-page-alerts: (
  info: (
    border: var(--uom-status-info),
    background: var(--uom-status-info-bg),
    fill: var(--uom-status-info),
  ),
  success: (
    border: var(--uom-status-success),
    background: var(--uom-status-success-bg),
    fill: var(--uom-status-success),
  ),
  warning: (
    border: var(--uom-status-warning),
    background: var(--uom-status-warning-bg),
    fill: var(--uom-status-warning),
  ),
  error: (
    border: var(--uom-status-error),
    background: var(--uom-status-error-bg),
    fill: var(--uom-status-error),
  ),
);

.uom-in-page-alert {
  @include component-spacing();
  padding: rem(16px);
  position: relative;
  border-left: solid 4px var(--uom-brand-accent);
  background-color: var(--uom-grey-04);
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;

  @include breakpoint('md') {
    padding: rem(24px) rem(24px) rem(24px) rem(16px);
  }

  .uom-section--invert & {
    color: var(--uom-text-dark);

    a {
      @include link-dark;
    }
  }

  &__icon {
    font-size: rem(map-get($uom-icon-sizes, 30));
    margin-right: rem(16px);
    margin-top: rem(-2px);
  }

  @each $color, $variant in $uom-in-page-alerts {
    &--#{"" + $color} {
      background-color: map-get($variant, background);
      border-color: map-get($variant, border);

      .uom-in-page-alert__icon {
        color: map-get($variant, fill);
      }
    }
  }

  &--compact {
    padding: rem(8px);
    border: 0;

    .uom-in-page-alert__icon {
      font-size: rem(map-get($uom-icon-sizes, 20));
      margin-right: rem(8px);
      margin-top: 0;
    }
  }
}
