/* stylelint-disable declaration-no-important  */
@function rem($value) {
  @if (unitless($value)) {
    $value: $value * 1px;
  }

  @return $value / $base-font-size * 1rem;
}

@function em($value) {
  @if (unitless($value)) {
    $value: $value * 1px;
  }

  @return $value / $base-font-size * 1em;
}

// generates modifer classes in the bem syntax
@mixin helper-classes($attribute, $map) {
  @each $modifier, $value in $map {
    &--#{$modifier} {
      #{$attribute}: get-mapped-value($modifier, $map) !important;
    }
  }
}

//gets mapped px values and returns it as rem
@function get-mapped-value($key, $map) {
  @each $mapkey, $mapvalue in $map {
    @if $mapkey == $key {
      @return rem($mapvalue);
    }
  }
}

// break out of the nsw-container class
@mixin break-out($position: relative) {
  @if $position != 'relative' and $position != 'absolute' {
    @error 'NSW-DS breakout mixin allows the following values for $position: relative, absolute. You have used "#{$position}"';
  }

  width: 100vw;
  position: $position;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}

@mixin break-out-reset {
  width: auto;
  position: static;
  margin-left: auto;
  margin-right: auto;
  left: auto;
  right: auto;
}

@mixin pseudo-clickable-block {
  &::after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
}
